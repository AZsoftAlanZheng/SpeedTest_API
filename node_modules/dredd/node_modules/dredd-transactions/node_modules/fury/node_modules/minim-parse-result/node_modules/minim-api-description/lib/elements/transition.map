{"version":3,"sources":["transition.js"],"names":["namespace","ArrayElement","getElementClass","Transition","args","element","transaction","transactions","first","request","method","undefined","attributes","get","value","set","href","err","children","filter","item","register"],"mappings":";;;;;;;;kBAAe,UAAUA,SAAV,EAAqB;AAClC,MAAMC,eAAeD,UAAUE,eAAV,CAA0B,OAA1B,CAArB;;AADkC,MAG5BC,UAH4B;AAAA;;AAIhC,0BAAqB;AAAA;;AAAA;;AAAA,wCAANC,IAAM;AAANA,YAAM;AAAA;;AAAA,qJACVA,IADU;;AAGnB,YAAKC,OAAL,GAAe,YAAf;AAHmB;AAIpB;;AAR+B;AAAA;AAAA,0BAUnB;AACX,YAAMC,cAAc,KAAKC,YAAL,CAAkBC,KAAtC;;AAEA,YAAIF,WAAJ,EAAiB;AAAA,cACPG,OADO,GACKH,WADL,CACPG,OADO;;;AAGf,cAAIA,OAAJ,EAAa;AACX,mBAAOA,QAAQC,MAAf;AACD;AACF;;AAED,eAAOC,SAAP;AACD;AAtB+B;AAAA;AAAA,0BAwBjB;AACb,eAAO,KAAKC,UAAL,CAAgBC,GAAhB,CAAoB,UAApB,CAAP;AACD,OA1B+B;AAAA,wBA4BnBC,KA5BmB,EA4BZ;AAClB,aAAKF,UAAL,CAAgBG,GAAhB,CAAoB,UAApB,EAAgCD,KAAhC;AACD;AA9B+B;AAAA;AAAA,0BAgCrB;AACT,eAAO,KAAKF,UAAL,CAAgBC,GAAhB,CAAoB,MAApB,CAAP;AACD,OAlC+B;AAAA,wBAoCvBC,KApCuB,EAoChB;AACd,aAAKF,UAAL,CAAgBG,GAAhB,CAAoB,MAApB,EAA4BD,KAA5B;AACD;AAtC+B;AAAA;AAAA,0BAwCb;AACjB,YAAI;AACF,iBAAO,KAAKE,IAAL,GAAY,KAAKA,IAAjB,GAAwB,KAAKT,YAAL,CAAkBM,GAAlB,CAAsB,CAAtB,EAAyBJ,OAAzB,CAAiCO,IAAhE;AACD,SAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,iBAAO,IAAP;AACD;AACF;AA9C+B;AAAA;AAAA,0BAgDZ;AAClB,eAAO,KAAKL,UAAL,CAAgBC,GAAhB,CAAoB,eAApB,CAAP;AACD,OAlD+B;AAAA,wBAoDdC,KApDc,EAoDP;AACvB,aAAKF,UAAL,CAAgBG,GAAhB,CAAoB,eAApB,EAAqCD,KAArC;AACD;AAtD+B;AAAA;AAAA,0BAwDrB;AACT,eAAO,KAAKF,UAAL,CAAgBC,GAAhB,CAAoB,MAApB,CAAP;AACD,OA1D+B;AAAA,wBA4DvBC,KA5DuB,EA4DhB;AACd,aAAKF,UAAL,CAAgBG,GAAhB,CAAoB,MAApB,EAA4BD,KAA5B;AACD;AA9D+B;AAAA;AAAA,0BAgEb;AACjB,eAAO,KAAKF,UAAL,CAAgBC,GAAhB,CAAoB,cAApB,CAAP;AACD,OAlE+B;AAAA,wBAoEfC,KApEe,EAoER;AACtB,aAAKF,UAAL,CAAgBG,GAAhB,CAAoB,cAApB,EAAoCD,KAApC;AACD;AAtE+B;AAAA;AAAA,0BAwEb;AACjB,eAAO,KAAKI,QAAL,CAAcC,MAAd,CAAqB;AAAA,iBAAQC,KAAKf,OAAL,KAAiB,iBAAzB;AAAA,SAArB,CAAP;AACD;AA1E+B;;AAAA;AAAA,IAGTJ,YAHS;;AA6ElCD,YAAUqB,QAAV,CAAmB,YAAnB,EAAiClB,UAAjC;AACD,C","file":"transition.js","sourcesContent":["export default function (namespace) {\n  const ArrayElement = namespace.getElementClass('array');\n\n  class Transition extends ArrayElement {\n    constructor(...args) {\n      super(...args);\n\n      this.element = 'transition';\n    }\n\n    get method() {\n      const transaction = this.transactions.first;\n\n      if (transaction) {\n        const { request } = transaction;\n\n        if (request) {\n          return request.method;\n        }\n      }\n\n      return undefined;\n    }\n\n    get relation() {\n      return this.attributes.get('relation');\n    }\n\n    set relation(value) {\n      this.attributes.set('relation', value);\n    }\n\n    get href() {\n      return this.attributes.get('href');\n    }\n\n    set href(value) {\n      this.attributes.set('href', value);\n    }\n\n    get computedHref() {\n      try {\n        return this.href ? this.href : this.transactions.get(0).request.href;\n      } catch (err) {\n        return null;\n      }\n    }\n\n    get hrefVariables() {\n      return this.attributes.get('hrefVariables');\n    }\n\n    set hrefVariables(value) {\n      this.attributes.set('hrefVariables', value);\n    }\n\n    get data() {\n      return this.attributes.get('data');\n    }\n\n    set data(value) {\n      this.attributes.set('data', value);\n    }\n\n    get contentTypes() {\n      return this.attributes.get('contentTypes');\n    }\n\n    set contentTypes(value) {\n      this.attributes.set('contentTypes', value);\n    }\n\n    get transactions() {\n      return this.children.filter(item => item.element === 'httpTransaction');\n    }\n  }\n\n  namespace.register('transition', Transition);\n}\n"]}