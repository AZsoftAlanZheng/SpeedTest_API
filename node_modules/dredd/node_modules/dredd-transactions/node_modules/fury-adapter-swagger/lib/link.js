'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.baseLink = baseLink;
exports.origin = origin;
exports.inferred = inferred;
function baseLink(element, parser, relation) {
  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  var _parser$minim$element = parser.minim.elements,
      StringElement = _parser$minim$element.String,
      Link = _parser$minim$element.Link;


  var opts = {
    path: options.path || [],
    url: options.url || 'http://docs.apiary.io/validations/swagger#' + (options.fragment || '')
  };

  var href = new StringElement(opts.url);
  var link = new Link();

  if (parser.generateSourceMap) {
    parser.createSourceMap(href, opts.path.concat(['url']));
  }

  link.relation = relation;
  link.href = href;

  if (options.description) {
    link.description = options.description;

    if (parser.generateSourceMap) {
      parser.createSourceMap(link.meta.get('description'), opts.path.concat(['description']));
    }
  }

  element.links.push(link);
}

function origin(fragment, element, parser) {
  baseLink(element, parser, 'origin', {
    fragment: fragment
  });
}

function inferred(fragment, element, parser) {
  baseLink(element, parser, 'inferred', {
    fragment: fragment
  });
}

exports.default = { baseLink: baseLink, origin: origin, inferred: inferred };
//# sourceMappingURL=link.map